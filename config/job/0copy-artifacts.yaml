---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: org1
  name: copyartifacts
spec:
  backoffLimit: 1
  template:
    metadata:
      name: copyartifacts
    spec:
      restartPolicy: "Never"
      volumes:
        - name: sharedvolume
          persistentVolumeClaim:
            claimName: shared-pvc
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
      containers:
        - name: copyartifacts
          image: alpine:3.7
          command:
            [
              "sh",
              "-c",
              "ls -l /shared; rm -rf /shared/*; ls -l /shared; while [ ! -f /shared/status_channeltx_complete ]; do echo Waiting for artifacts to be copied; sleep 2; done; sleep 10; ls -l /shared; ",
            ]
          volumeMounts:
            - mountPath: /shared
              name: sharedvolume

---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: org2
  name: copyartifacts
spec:
  backoffLimit: 1
  template:
    metadata:
      name: copyartifacts
    spec:
      restartPolicy: "Never"
      volumes:
        - name: sharedvolume
          persistentVolumeClaim:
            claimName: shared-pvc
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
      containers:
        - name: copyartifacts
          image: alpine:3.7
          command:
            [
              "sh",
              "-c",
              "ls -l /shared; rm -rf /shared/*; ls -l /shared; while [ ! -f /shared/status_channeltx_complete ]; do echo Waiting for artifacts to be copied; sleep 2; done; sleep 10; ls -l /shared; ",
            ]
          volumeMounts:
            - mountPath: /shared
              name: sharedvolume

---
apiVersion: batch/v1
kind: Job
metadata:
  namespace: ordererorg1
  name: copyartifacts
spec:
  backoffLimit: 1
  template:
    metadata:
      name: copyartifacts
    spec:
      restartPolicy: "Never"
      volumes:
        - name: sharedvolume
          persistentVolumeClaim:
            claimName: shared-pvc
        - name: dockersocket
          hostPath:
            path: /var/run/docker.sock
      containers:
        - name: copyartifacts
          image: alpine:3.7
          command:
            [
              "sh",
              "-c",
              "ls -l /shared; rm -rf /shared/*; ls -l /shared; while [ ! -f /shared/status_channeltx_complete ]; do echo Waiting for artifacts to be copied; sleep 2; done; sleep 10; ls -l /shared; ",
            ]
          volumeMounts:
            - mountPath: /shared
              name: sharedvolume
